<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>webcrawler-node</groupId>
	<artifactId>webcrawler-node</artifactId>
	<version>${maven.build.timestamp}</version>
	<packaging>jar</packaging>

	<properties>
		<maven.build.timestamp.format>yyyy-MM-dd_HH-mm</maven.build.timestamp.format>
		<mustache.compiler.version>0.9.4</mustache.compiler.version>
		<sun.httpserver.version>20070405</sun.httpserver.version>
		<apache.httpclient.version>4.5.2</apache.httpclient.version>
		<google.gson.version>2.6.1</google.gson.version>
		<imageio.version>3.4.1</imageio.version>
		<tika.version>1.5</tika.version>
		<selenium.version>2.47.0</selenium.version>
		<s3.version>1.11.194</s3.version>
		<sqs.version>1.11.194</sqs.version>
		<kinesis.version>0.12.11</kinesis.version>
		<db.version>5.2.0</db.version>
		<jsoup.version>1.11.3</jsoup.version>
		<models.version>2.3.0</models.version>
		<logback.version>1.2.3</logback.version>
		<commonscli.version>1.3.1</commonscli.version>
		<jodatime.version>2.9.4</jodatime.version>
		<json.version>20171018</json.version>
		<phantomjs.version>1.2.1</phantomjs.version>
		<slack.webhook.version>1.2.1</slack.webhook.version>
		<hikaricp.version>3.3.0</hikaricp.version>
		<surefire-plugin-version>2.22.0</surefire-plugin-version>
	</properties>

	<build>

		<sourceDirectory>src/java</sourceDirectory>

		<resources>
			<!-- regular resource processsing for everything except logback.xml -->
			<resource>
				<directory>src/resources</directory>
				<excludes>
					<exclude>logback.xml</exclude>
				</excludes>
			</resource>
			<!-- resource processsing with a different output directory for logback.xml -->
			<resource>
				<directory>src/resources</directory>
				<includes>
					<include>logback.xml</include>
				</includes>
				<!-- relative to target/classes i.e. ${project.build.outputDirectory} -->
			</resource>
		</resources>

		<extensions>
			<extension>
				<groupId>org.kuali.maven.wagons</groupId>
				<artifactId>maven-s3-wagon</artifactId>
				<version>1.2.1</version>
			</extension>
		</extensions>

		<plugins>

			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.3</version>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-shade-plugin</artifactId>
				<executions>
					<execution>
						<goals>
							<goal>shade</goal>
						</goals>
						<configuration>
							<filters>
								<filter>
									<artifact>*:*</artifact>
									<excludes>
										<exclude>META-INF/*.SF</exclude>
										<exclude>META-INF/*.DSA</exclude>
										<exclude>META-INF/*.RSA</exclude>
									</excludes>
								</filter>
							</filters>
							<outputDirectory>target/deployment</outputDirectory>
							<shadedArtifactAttached>true</shadedArtifactAttached>
							<transformers>
								<transformer
									implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
									<mainClass>br.com.lett.crawlernode.main.Main</mainClass>
								</transformer>
							</transformers>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>${surefire-plugin-version}</version>
			</plugin>
		</plugins>

	</build>

	<dependencies>

		<dependency>
			<groupId>com.sun.net.httpserver</groupId>
			<artifactId>http</artifactId>
			<version>${sun.httpserver.version}</version>
		</dependency>

		<!-- A JPEG reader plugin for Java ImageIO This plugin will deal with cases 
			where we have Images encoded in CYMK color space -->
		<dependency>
			<groupId>com.twelvemonkeys.imageio</groupId>
			<artifactId>imageio-jpeg</artifactId>
			<version>${imageio.version}</version>
		</dependency>

		<!-- HTML parser -->
		<dependency>
			<groupId>org.jsoup</groupId>
			<artifactId>jsoup</artifactId>
			<version>${jsoup.version}</version>
		</dependency>

		<dependency>
			<groupId>org.apache.tika</groupId>
			<artifactId>tika-parsers</artifactId>
			<version>${tika.version}</version>
		</dependency>

		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpclient</artifactId>
			<version>${apache.httpclient.version}</version>
		</dependency>

		<!-- WebDriver -->
		<dependency>
			<groupId>org.seleniumhq.selenium</groupId>
			<artifactId>selenium-java</artifactId>
			<version>${selenium.version}</version>
		</dependency>

		<!-- Lett database models Already contains these dependencies: jooq, postgresql, 
			mongo-java-driver -->
		<dependency>
			<groupId>br.com.lett</groupId>
			<artifactId>db</artifactId>
			<version>${db.version}</version>
		</dependency>

		<!-- Lett models -->
		<dependency>
			<groupId>br.com.lett</groupId>
			<artifactId>lett-models</artifactId>
			<version>${models.version}</version>
		</dependency>

		<!-- JSON for Java -->
		<dependency>
			<groupId>org.json</groupId>
			<artifactId>json</artifactId>
			<version>${json.version}</version>
		</dependency>

		<!-- Command line parsing -->
		<dependency>
			<groupId>commons-cli</groupId>
			<artifactId>commons-cli</artifactId>
			<version>${commonscli.version}</version>
		</dependency>

		<!-- Logging -->
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<version>${logback.version}</version>
		</dependency>

		<dependency>
			<groupId>com.zaxxer</groupId>
			<artifactId>HikariCP</artifactId>
			<version>${hikaricp.version}</version>
		</dependency>

		<!-- AWS -->
		<dependency>
			<groupId>com.amazonaws</groupId>
			<artifactId>aws-java-sdk-s3</artifactId>
			<version>${s3.version}</version>
		</dependency>
		<dependency>
			<groupId>com.amazonaws</groupId>
			<artifactId>aws-java-sdk-sqs</artifactId>
			<version>${sqs.version}</version>
		</dependency>
		<dependency>
			<groupId>com.amazonaws</groupId>
			<artifactId>amazon-kinesis-producer</artifactId>
			<version>${kinesis.version}</version>
		</dependency>

		<!-- Joda time required for Amazon -->
		<dependency>
			<groupId>joda-time</groupId>
			<artifactId>joda-time</artifactId>
			<version>${jodatime.version}</version>
		</dependency>

		<!-- Commom model to store image descriptors of Mongo -->
		<dependency>
			<groupId>com.google.code.gson</groupId>
			<artifactId>gson</artifactId>
			<version>${google.gson.version}</version>
		</dependency>

		<!-- https://mvnrepository.com/artifact/com.github.spullara.mustache.java/compiler -->
		<dependency>
			<groupId>com.github.spullara.mustache.java</groupId>
			<artifactId>compiler</artifactId>
			<version>${mustache.compiler.version}</version>
		</dependency>

		<!-- https://mvnrepository.com/artifact/com.codeborne/phantomjsdriver -->
		<dependency>
			<groupId>com.codeborne</groupId>
			<artifactId>phantomjsdriver</artifactId>
			<version>${phantomjs.version}</version>
		</dependency>

		<!-- Slack API -->
		<dependency>
			<groupId>net.gpedro.integrations.slack</groupId>
			<artifactId>slack-webhook</artifactId>
			<version>${slack.webhook.version}</version>
		</dependency>
	</dependencies>

	<repositories>

		<repository>
			<id>jitpack.io</id>
			<url>https://jitpack.io</url>
		</repository>

		<repository>
			<id>maven-placeholder</id>
			<url>s3://maven-placeholder</url>
		</repository>

	</repositories>

</project>